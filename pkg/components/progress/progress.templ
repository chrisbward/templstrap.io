package progress 

import (
	"fmt"
	"strings"
	"github.com/chrisbward/templstrap.io/pkg/base"
)
type ProgressStatusClass string

const SuccessStatus ProgressStatusClass = "bg-success"
const DangerStatus ProgressStatusClass = "bg-danger"
const WarningStatus ProgressStatusClass = "bg-warning"
const InfoStatus ProgressStatusClass = "bg-info"


type ProgressProps struct {
	base.ElementProps
	InProgress bool
	IsAnimated bool
	Percentage int
	Label string
	LabelCanOverflow bool
	StatusClass ProgressStatusClass
}
const RootClassName = "progress-bar"

func (pp *ProgressProps) BuildClassNames() (classNames string) {

	classValues := []string{RootClassName}

	if pp.InProgress {
		classValues = append(classValues, "progress-bar-striped")
	}
	if pp.IsAnimated {
		classValues = append(classValues, "progress-bar-animated")
	}

	classValues = append(classValues, string(pp.StatusClass))

	if pp.AdditionalClasses != nil {
		classValues = append(classValues, pp.AdditionalClasses...)
	}
	classNames = strings.Join(classValues, " ")

	return
}


func (pp ProgressProps) PercentStyleString() (percent string) { 
	return fmt.Sprintf("width: %d", pp.Percentage)
}

css progress(percent int) {
	width: { fmt.Sprintf("%d%%", percent) };
}

templ Show(props ProgressProps) {
	<div id={ props.Id } class="progress" role="progressbar" aria-label={ props.AriaLabel } aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
		<div class={props.BuildClassNames(), progress(props.Percentage) } style="">{ props.Label }</div>
	</div>
}
