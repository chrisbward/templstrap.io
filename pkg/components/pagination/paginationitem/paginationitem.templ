package paginationitem

import "github.com/chrisbward/templstrap.io/pkg/base"
import "strings"
import "github.com/sirupsen/logrus"

type PaginationItemProps struct {
	base.ElementProps
    IsPreviousButton bool
    IsNextButton bool
    IsActive bool
    AriaLabel string
    Content string
    BuiltURL string
}
const RootClassNamePageItem = "page-item"


func (pp PaginationItemProps) BuildClassName() (classes string) {
	classNames := []string{RootClassNamePageItem}

	if pp.IsDisabled { 
		classNames = append(classNames, "disabled")
	}
	if pp.IsActive { 
		classNames = append(classNames, "active")
	}
    if pp.IsPreviousButton {
		classNames = append(classNames, "previous")
    }
    if pp.IsNextButton {
		classNames = append(classNames, "next")
    }


    if pp.AdditionalClasses != nil {
		classNames = append(classNames, pp.AdditionalClasses...)
	}

	classes = strings.Join(classNames, " ")

	return
}

func (pp PaginationItemProps) RebuildHTMXAttributes() (htmxAttributes map[string]any) {
    htmxAttributes = pp.HTMX.GetAttributes()
    htmxAttributes["hx-replace-url"] = pp.BuiltURL 

    return 
}
func Debug(props PaginationItemProps) templ.Component {
	logrus.Debugln("debugging props")
	logrus.Infoln(props)
	logrus.Infoln(props.ExtraAttributes)

	return templ.ComponentFunc(templ.NopComponent)
}


templ Show(props PaginationItemProps) {
	@Debug(props)

    <li 
        class={props.BuildClassName()}
    >
        <a 
            class="page-link test" 
            href={ templ.SafeURL(props.BuiltURL) } 
            aria-label={ props.AriaLabel }
			{ props.RebuildHTMXAttributes()... }
            { props.ExtraAttributes... }
        >@templ.Raw(props.Content)</a>
    </li>
}