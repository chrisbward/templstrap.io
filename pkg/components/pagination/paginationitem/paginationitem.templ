package paginationitem

import "github.com/chrisbward/templstrap.io/pkg/base"
import "strings"
import "github.com/sirupsen/logrus"

type PaginationItemProps struct {
	base.ElementProps
    IsActive bool
    AriaLabel string
    Content string
    BuiltURL string
}
const RootClassNamePageItem = "page-item"


func (pp PaginationItemProps) BuildClassName(isActive bool, isDisabled bool) (classes string) {
	classNames := []string{RootClassNamePageItem}

	if isDisabled { 
		classNames = append(classNames, "disabled")
	}
	if isActive { 
		classNames = append(classNames, "active")
	}

    if pp.AdditionalClasses != nil {
		classNames = append(classNames, pp.AdditionalClasses...)
	}

	classes = strings.Join(classNames, " ")

	return
}

func (pp PaginationItemProps) RebuildHTMXAttributes() (htmxAttributes map[string]any) {
    htmxAttributes = make(map[string]any)
    for k, v := range pp.HTMX.GetAttributes() {
		htmxAttributes[k] = v
	}
    htmxAttributes["hx-replace-url"] = templ.SafeURL(pp.BuiltURL)
    logrus.Infoln("hx-replace-url value", htmxAttributes["hx-replace-url"])

    return 
}


templ Show(props PaginationItemProps) {
    <li 
        class={props.BuildClassName(props.IsActive , props.IsDisabled)}
    >
        <a 
            class="page-link" 
            href={ templ.SafeURL(props.BuiltURL) } 
            aria-label={ props.AriaLabel }
            { props.ExtraAttributes... }
			{ props.RebuildHTMXAttributes()... }
        >@templ.Raw(props.Content)</a>
    </li>
}