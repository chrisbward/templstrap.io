package offcanvas

import (
	"fmt"
	"github.com/chrisbward/templstrap.io/pkg/base"
	"strings"
)

const RootClassName = "offcanvas"

type OffCanvasPlacementClass string

const (
	OffCanvasStartPlacement  OffCanvasPlacementClass = "start"
	OffCanvasEndPlacement    OffCanvasPlacementClass = "end"
	OffCanvasTopPlacement    OffCanvasPlacementClass = "top"
	OffCanvasBottomPlacement OffCanvasPlacementClass = "bottom"
)

type SizeType string

const (
	Small           SizeType = "-sm"
	Medium          SizeType = "-md"
	Large           SizeType = "-lg"
	ExtraLarge      SizeType = "-xl"
	ExtraExtraLarge SizeType = "-xxl"
)

type OffCanvasProps struct {
	base.ElementProps
	Title              string
	IsShown            bool
	OffCanvasPlacement OffCanvasPlacementClass
	Size               SizeType
}

func (ocp OffCanvasProps) BuildClassNames() (classes string) {
	classNames := []string{}

	classNames = append(
		classNames, fmt.Sprintf("%s%s", RootClassName, string(ocp.Size)),
	)
	classNames = append(
		classNames, fmt.Sprintf("%s-%s", RootClassName, string(ocp.OffCanvasPlacement)),
	)
	if ocp.IsShown{
		classNames = append( classNames, "show")
	}

	classes = strings.Join(classNames, " ")

	return
}

templ Show(props OffCanvasProps) {
	<div
		class={ props.BuildClassNames() }
		tabindex="-1"
		id={ props.Id }
		aria-labelledby="offcanvasLabel"
	>
		<div class="offcanvas-header">
			<h5 class="offcanvas-title" id="offcanvasLabel">{ props.Title }</h5>
			<button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
		</div>
		<div class="offcanvas-body">
			{ children... }
		</div>
	</div>
}
