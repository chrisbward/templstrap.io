package textarea

import (
	"fmt"
	"github.com/chrisbward/templstrap.io/pkg/base"
	"github.com/chrisbward/templstrap.io/testsuite/entities"
	"strings"
)

const RootClassName = "form-control"

type TextAreaProps struct {
	base.FormElementProps
	Value                          string
	Placeholder                    string
	Rows                           int
	FieldValidationFeedbackMessage string
	Validation                     entities.FormFieldValidation
}

func (ip TextAreaProps) BuildClassNames() (classes string) {
	classNames := []string{RootClassName}

	if ip.Validation.ValidationState == entities.FieldIsInvalidValidationStatusType {
		classNames = append(classNames, string(entities.FieldIsInvalidValidationStatusType))
	}
	if ip.Validation.ValidationState == entities.FieldIsValidValidationStatusType {
		classNames = append(classNames, string(entities.FieldIsValidValidationStatusType))
	}

	classes = strings.Join(classNames, " ")

	return
}

templ Show(props TextAreaProps) {
	<textarea
		class="form-control"
		class={ props.BuildClassNames() }
		id={ props.Id }
		placeholder={ props.Placeholder }
		name={ props.Id }
		rows={ fmt.Sprint(props.Rows) }
		readonly?={ props.IsReadOnly }
		disabled?={ props.IsDisabled }
		required?={ props.Validation.IsRequired }
		{ props.ExtraAttributes... }
		{ props.HTMX.GetAttributes()... }
	></textarea>
	if props.Validation.ValidationState == entities.FieldIsInvalidValidationStatusType {
		<div class="invalid-feedback">
			{ props.FieldValidationFeedbackMessage }
		</div>
	}
	if props.Validation.ValidationState == entities.FieldIsValidValidationStatusType {
		<div class="valid-feedback">
			{ props.FieldValidationFeedbackMessage }
		</div>
	}
}
