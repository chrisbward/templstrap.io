// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package blockquote

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"fmt"
	"strings"
)

type BlockCitationSource struct {
	Title     string
	Hyperlink templ.SafeURL
}
type BlockQuoteCitation struct {
	CitationFormatting string
	Citations          []*BlockCitationSource
}

type BlockQuoteProps struct {
	Quote    string
	Citation *BlockQuoteCitation
}

func (bqc *BlockQuoteCitation) String() (blockQuoteCitationTitle string) {

	var renderedBlockquoteCitations []string
	for _, citation := range bqc.Citations {
		var citationTitleRenderedContent string

		if citation.Hyperlink != "" {
			citationTitleRenderedContent = fmt.Sprintf("<a href=\"%s\" target=\"_blank\">%s</a>", citation.Hyperlink, citation.Title)
		} else {
			citationTitleRenderedContent = citation.Title
		}

		renderedBlockquoteCitation := fmt.Sprintf("<cite title=\"%s\">%s</cite>", citation.Title, citationTitleRenderedContent)
		renderedBlockquoteCitations = append(renderedBlockquoteCitations, renderedBlockquoteCitation)
	}
	if bqc.CitationFormatting != "" {
		return fmt.Sprintf(bqc.CitationFormatting, strings.Join(renderedBlockquoteCitations, " "))
	}

	return
}

func Show(props BlockQuoteProps) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		if props.Citation != nil {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<figure><blockquote class=\"blockquote\"><p>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.Raw(props.Quote).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p></blockquote><figcaption class=\"blockquote-footer\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.Raw(props.Citation.String()).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</figcaption></figure>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<blockquote class=\"blockquote\"><p>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(props.Quote)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `pkg/content/typography/blockquote/blockquote.templ`, Line: 56, Col: 19}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p></blockquote>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		return templ_7745c5c3_Err
	})
}
